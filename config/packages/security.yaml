security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # login:
        #     pattern:  ^/api/login
        #     stateless: true
        #     anonymous: true
        #     json_login:
        #         check_path:               /api/login_check
        #         success_handler:          lexik_jwt_authentication.handler.authentication_success
        #         failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        # secured_area:
            # anonymous: ~
            # oauth:
            #     resource_owners:
            #         azure:           "/login/check-azure"
            #     login_path:        /login/check-azure
            #     use_forward:       false
            #     failure_path:      /login
            #     oauth_user_provider:
            #         service: my.oauth_aware.user_provider.service
        api_login:
            pattern:  ^/api/auth/login
            stateless: true
            anonymous: true
            json_login:
                provider: app_user_provider
                check_path: /api/auth/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            provider: app_user_provider
        api_register:
            pattern:  ^/api/auth/register
            stateless: true
            anonymous: true
        api_reset:
            pattern:  ^/api/auth/reset
            stateless: true
            anonymous: true
        api:
            pattern:   ^/api
            anonymous: false
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            logout:
                path: app_logout
            anonymous: true
            guard:
                authenticators:
                    - App\Security\AdminAuthenticator
            

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/admin, roles: ROLE_USER }
        - { path: ^/signin, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/loginazure, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/auth/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/auth/logout, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/auth/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/auth/reset, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
